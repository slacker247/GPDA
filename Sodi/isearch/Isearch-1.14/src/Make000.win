# Generated automatically from Makefile.000.in by configure.
#
# See ../Makefile for compilation instructions.
#

#
# Compiler and Compiler flags
#

!IFDEF WIN32
!include <ntwin32.mak>
CFLAGS=$(cflags) $(cvarsmt) $(cdebug) -Dstrcasecmp=stricmp -Dstrncasecmp=strnicmp -DNO_MMAP -DUNISOCK_WINSOCK
!ELSE
CFLAGS=-Alfw -F 4000 -G3 -Oceglot -W3 -Zi -Dstrcasecmp=stricmp -Dstrncasecmp=strnicmp -DNO_MMAP -DUNISOCK_WINSOCK -DFAR=_far
!ENDIF

#
# Install Directory
#
# Where should I install executables (make install)?
#
INSTALL=/usr/local/bin

#
# Executables Directory
#
# Where should I place executables?
#
BIN_DIR=..\bin

#
# Document Type Directory
#
# Where are document type sources located?
#
DOCTYPE_DIR=../doctype
DOCLIB=

#
# Resulting Library
#
LIBRARY=$(BIN_DIR)\Isearch.lib

#
# Librarian
#
# Select your platform and comment/uncomment the appropriate ARFLAGS
#
AR=lib
!IFDEF WIN32
ARFLAGS=-out:$(LIBRARY)
!ELSE
ARFLAGS=$(LIBRARY) +
!ENDIF

# 
# That should be all you need to configure
#

OBJ= vlist.obj registry.obj opobj.obj operand.obj operator.obj termobj.obj sterm.obj \
	opstack.obj squery.obj \
	fprec.obj fpt.obj strlist.obj dtreg.obj idb.obj string.obj common.obj result.obj \
	rset.obj iresult.obj irset.obj record.obj reclist.obj mdt.obj \
	mdtrec.obj index.obj attr.obj attrlist.obj dfd.obj dfdt.obj dft.obj df.obj \
	fc.obj fct.obj soundex.obj tokengen.obj strstack.obj infix2rpn.obj \
	glist.obj gstack.obj merge.obj \
###DTOBJ###

H= gdt.h vlist.hxx sw.hxx opobj.hxx operand.hxx operator.hxx \
	termobj.hxx \
	sterm.hxx opstack.hxx squery.hxx registry.hxx \
	fprec.hxx fpt.hxx strlist.hxx dtreg.hxx idb.hxx \
	string.hxx common.hxx result.hxx rset.hxx iresult.hxx \
	irset.hxx record.hxx reclist.hxx mdt.hxx \
	mdtrec.hxx index.hxx attr.hxx attrlist.hxx dfd.hxx \
	dfdt.hxx dft.hxx df.hxx fc.hxx fct.hxx \
	defs.hxx idbobj.hxx soundex.hxx\
	tokengen.hxx strstack.hxx infix2rpn.hxx \
	glist.hxx gstack.hxx merge.hxx \
###DTHXX###

INC= -I$(DOCTYPE_DIR) -I../src

RM= del

all: $(OBJ) $(LIBRARY) Iindex.obj Isearch.obj Iutil.obj Iindex Isearch Iutil

#gdt-sys.h:
#	/bin/sh ./configure $(CC)

Iindex.obj:$(H) Iindex.cxx
	$(CC) $(CFLAGS) $(INC) -c Iindex.cxx

Isearch.obj:$(H) Isearch.cxx
	$(CC) $(CFLAGS) $(INC) -c Isearch.cxx

Iutil.obj:$(H) Iutil.cxx
	$(CC) $(CFLAGS) $(INC) -c Iutil.cxx

vlist.obj:$(H) vlist.cxx
	$(CC) $(CFLAGS) $(INC) -c vlist.cxx

registry.obj:$(H) registry.cxx
	$(CC) $(CFLAGS) $(INC) -c registry.cxx

opobj.obj:$(H) opobj.cxx
	$(CC) $(CFLAGS) $(INC) -c opobj.cxx

opstack.obj:$(H) opstack.cxx
	$(CC) $(CFLAGS) $(INC) -c opstack.cxx

operand.obj:$(H) operand.cxx
	$(CC) $(CFLAGS) $(INC) -c operand.cxx

operator.obj:$(H) operator.cxx
	$(CC) $(CFLAGS) $(INC) -c operator.cxx

termobj.obj:$(H) termobj.cxx
	$(CC) $(CFLAGS) $(INC) -c termobj.cxx

sterm.obj:$(H) sterm.cxx
	$(CC) $(CFLAGS) $(INC) -c sterm.cxx

fprec.obj:$(H) fprec.cxx
	$(CC) $(CFLAGS) $(INC) -c fprec.cxx

fpt.obj:$(H) fpt.cxx
	$(CC) $(CFLAGS) $(INC) -c fpt.cxx

strlist.obj:$(H) strlist.cxx
	$(CC) $(CFLAGS) $(INC) -c strlist.cxx

dtreg.obj:$(H) dtreg.cxx
	$(CC) $(CFLAGS) $(INC) -c dtreg.cxx

idb.obj:$(H) idb.cxx
	$(CC) $(CFLAGS) $(INC) -c idb.cxx

string.obj:$(H) string.cxx
	$(CC) $(CFLAGS) $(INC) -c string.cxx

strstack.obj:$(H) strstack.cxx
	$(CC) $(CFLAGS) $(INC) -c strstack.cxx
	 
tokengen.obj:$(H) tokengen.cxx
	$(CC) $(CFLAGS) $(INC) -c tokengen.cxx
		  
infix2rpn.obj:$(H) infix2rpn.cxx
	$(CC) $(CFLAGS) $(INC) -c infix2rpn.cxx

common.obj:$(H) common.cxx
	$(CC) $(CFLAGS) $(INC) -c common.cxx

result.obj:$(H) result.cxx
	$(CC) $(CFLAGS) $(INC) -c result.cxx

merge.obj:$(H) merge.cxx
	$(CC) $(CFLAGS) $(INC) -c merge.cxx

rset.obj:$(H) rset.cxx
	$(CC) $(CFLAGS) $(INC) -c rset.cxx

iresult.obj:$(H) iresult.cxx
	$(CC) $(CFLAGS) $(INC) -c iresult.cxx

irset.obj:$(H) irset.cxx
	$(CC) $(CFLAGS) $(INC) -c irset.cxx

squery.obj:$(H) squery.cxx
	$(CC) $(CFLAGS) $(INC) -c squery.cxx

record.obj:$(H) record.cxx
	$(CC) $(CFLAGS) $(INC) -c record.cxx

reclist.obj:$(H) reclist.cxx
	$(CC) $(CFLAGS) $(INC) -c reclist.cxx

mdt.obj:$(H) mdt.cxx
	$(CC) $(CFLAGS) $(INC) -c mdt.cxx

mdtrec.obj:$(H) mdtrec.cxx
	$(CC) $(CFLAGS) $(INC) -c mdtrec.cxx

index.obj:$(H) index.cxx
	$(CC) $(CFLAGS) $(INC) -c index.cxx

attr.obj:$(H) attr.cxx
	$(CC) $(CFLAGS) $(INC) -c attr.cxx

attrlist.obj:$(H) attrlist.cxx
	$(CC) $(CFLAGS) $(INC) -c attrlist.cxx

dfd.obj:$(H) dfd.cxx
	$(CC) $(CFLAGS) $(INC) -c dfd.cxx

dfdt.obj:$(H) dfdt.cxx
	$(CC) $(CFLAGS) $(INC) -c dfdt.cxx

dft.obj:$(H) dft.cxx
	$(CC) $(CFLAGS) $(INC) -c dft.cxx

df.obj:$(H) df.cxx
	$(CC) $(CFLAGS) $(INC) -c df.cxx

fc.obj:$(H) fc.cxx
	$(CC) $(CFLAGS) $(INC) -c fc.cxx

fct.obj:$(H) fct.cxx
	$(CC) $(CFLAGS) $(INC) -c fct.cxx

soundex.obj:$(H) soundex.cxx
	$(CC) $(CFLAGS) $(INC) -c soundex.cxx

glist.obj:$(H) glist.cxx
	$(CC) $(CFLAGS) $(INC) -c glist.cxx

gstack.obj:$(H) gstack.cxx
	$(CC) $(CFLAGS) $(INC) -c gstack.cxx

dictionary.obj:$(H) dictionary.cxx
	$(CC) $(CFLAGS) $(INC) -c dictionary.cxx

###DTMAKE###

doctype.obj:$(H) $(DOCTYPE_DIR)/doctype.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/doctype.cxx

$(LIBRARY):$(BIN_DIR)/$(LIBRARY)
	@echo.
 
$(BIN_DIR)/$(LIBRARY):$(OBJ)
	$(RM) $(LIBRARY)
	$(AR) $(ARFLAGS) $(OBJ)

Iindex:$(BIN_DIR)/Iindex.exe
	@echo.

$(BIN_DIR)/Iindex.exe:$(BIN_DIR)/$(LIBRARY) Iindex.cxx Iindex.obj
	$(RM) $(BIN_DIR)\Iindex.exe
!IFDEF WIN32
	$(link) $(conlflags) $(ldebug) -out:$(BIN_DIR)\Iindex.exe Iindex.obj \
		$(LIBRARY) $(conlibsmt)
!ELSE
	$(CC) $(CFLAGS) -o $(BIN_DIR)\Iindex.exe Iindex.obj $(LIBRARY)
!ENDIF

Isearch:$(BIN_DIR)/Isearch.exe
	@echo.

$(BIN_DIR)/Isearch.exe:$(BIN_DIR)/$(LIBRARY) Isearch.cxx Isearch.obj
	$(RM) $(BIN_DIR)\Isearch.exe
!IFDEF WIN32
	$(link) $(conlflags) $(ldebug) -out:$(BIN_DIR)\Isearch.exe Isearch.obj \
		$(LIBRARY) $(conlibsmt)
!ELSE
	$(CC) $(CFLAGS) -o $(BIN_DIR)\Isearch.exe Isearch.obj $(LIBRARY)
!ENDIF

Iutil:$(BIN_DIR)/Iutil.exe
	@echo.

$(BIN_DIR)/Iutil.exe:$(BIN_DIR)/$(LIBRARY) Iutil.cxx Iutil.obj
	$(RM) $(BIN_DIR)\Iutil.exe
!IFDEF WIN32
	$(link) $(conlflags) $(ldebug) -out:$(BIN_DIR)\Iutil.exe Iutil.obj \
		$(LIBRARY) $(conlibsmt)
!ELSE
	$(CC) $(CFLAGS) -o $(BIN_DIR)\Iutil.exe Iutil.obj $(LIBRARY)
!ENDIF

clean:
	$(RM) *.obj
	$(RM) $(BIN_DIR)\Iindex.exe
	$(RM) $(BIN_DIR)\Isearch.exe
	$(RM) $(BIN_DIR)\Iutil.exe
	$(RM) $(BIN_DIR)\$(LIBRARY)

build:
	make -i realclean
	make all

install:
	@echo "*** Copying Isearch executables to $(INSTALL)/. ***"
	cp $(BIN_DIR)/Iindex $(INSTALL)/.
	cp $(BIN_DIR)/Isearch $(INSTALL)/.
	cp $(BIN_DIR)/Iutil $(INSTALL)/.
