#############################################################################
#############################################################################
#############################################################################
#####                                                                   #####
##### NOTE: This Makefile was generated by dtconf/autoconf.  To make    #####
#####       changes to the Makefile, modify the file Makefile.000.in    #####
#####       instead of this file.  The dtconf utility uses Makefile.000 #####
#####       to generate this file, and Makefile.000 is generated from   #####
#####       Makefile.000.in by Gnu Autoconf.                            #####
#####                                                                   #####
#############################################################################
#############################################################################
#############################################################################

# Generated automatically from Makefile.000.in by configure.
#
# See ../Makefile for compilation instructions.
#
SHELL=/bin/sh

#
# Compiler
#
CC=g++

#
# Compiler Flags
#
# Uncomment the appropriate entry
#
#CFLAGS=-g -DUNIX -Wall -Dfar=

#CFLAGS=-DUNIX -O2 -D__CSTRING__
#CFLAGS=-g -DUNIX -Wall -O2
CFLAGS=-g -DUNIX -Wall -D__CSTRING__

#
# Install Directory
#
# Where should I install executables (make install)?
#
INSTALL=/usr/local/bin

#
# Executables Directory
#
# Where should I place executables?
#
BIN_DIR=../bin

#
# Document Type Directory
#
# Where are document type sources located?
#
DOCTYPE_DIR=../doctype
DOCLIB=

# 
# That should be all you need to configure
#
LDFLAGS=
LIB = libIsearch.a
AR = ar
ARFLAGS = r
RANLIB=ranlib
#RANLIB = ranlib
#RANLIB_TEST = [ -f /usr/bin/ranlib -o -f /bin/ranlib ]

OBJ= vlist.o registry.o opobj.o operand.o operator.o termobj.o sterm.o \
	opstack.o squery.o \
	fprec.o fpt.o strlist.o dtreg.o idb.o string.o common.o result.o \
	rset.o iresult.o irset.o record.o reclist.o mdt.o \
	mdtrec.o index.o attr.o attrlist.o dfd.o dfdt.o dft.o df.o \
	fc.o fct.o soundex.o tokengen.o strstack.o infix2rpn.o \
	glist.o gstack.o merge.o \
	memcntl.o marclib.o marc.o \
	doctype.o \
	simple.o \
	firstline.o \
	colondoc.o \
	iafadoc.o \
	mailfolder.o \
	referbib.o \
	irlist.o \
	listdigest.o \
	maildigest.o \
	medline.o \
	filmline.o \
	memodoc.o \
	sgmlnorm.o \
	html.o \
	oneline.o \
	para.o \
	filename.o \
	ftp.o \
	emacsinfo.o \
	gopher.o \
	bibtex.o \
	usmarc.o \
	dif.o


H= gdt.h vlist.hxx sw.hxx opobj.hxx operand.hxx operator.hxx \
	termobj.hxx \
	sterm.hxx opstack.hxx squery.hxx registry.hxx \
	fprec.hxx fpt.hxx strlist.hxx dtreg.hxx idb.hxx \
	string.hxx common.hxx result.hxx rset.hxx iresult.hxx \
	irset.hxx record.hxx reclist.hxx mdt.hxx \
	mdtrec.hxx index.hxx attr.hxx attrlist.hxx dfd.hxx \
	dfdt.hxx dft.hxx df.hxx fc.hxx fct.hxx \
	defs.hxx idbobj.hxx soundex.hxx\
	tokengen.hxx strstack.hxx infix2rpn.hxx \
	glist.hxx gstack.hxx merge.hxx \
	memcntl.h marclib.hxx marc.h marc.hxx \
	$(DOCTYPE_DIR)/doctype.hxx \
	$(DOCTYPE_DIR)/simple.hxx \
	$(DOCTYPE_DIR)/firstline.hxx \
	$(DOCTYPE_DIR)/colondoc.hxx \
	$(DOCTYPE_DIR)/iafadoc.hxx \
	$(DOCTYPE_DIR)/mailfolder.hxx \
	$(DOCTYPE_DIR)/referbib.hxx \
	$(DOCTYPE_DIR)/irlist.hxx \
	$(DOCTYPE_DIR)/listdigest.hxx \
	$(DOCTYPE_DIR)/maildigest.hxx \
	$(DOCTYPE_DIR)/medline.hxx \
	$(DOCTYPE_DIR)/filmline.hxx \
	$(DOCTYPE_DIR)/memodoc.hxx \
	$(DOCTYPE_DIR)/sgmlnorm.hxx \
	$(DOCTYPE_DIR)/html.hxx \
	$(DOCTYPE_DIR)/oneline.hxx \
	$(DOCTYPE_DIR)/para.hxx \
	$(DOCTYPE_DIR)/filename.hxx \
	$(DOCTYPE_DIR)/ftp.hxx \
	$(DOCTYPE_DIR)/emacsinfo.hxx \
	$(DOCTYPE_DIR)/gopher.hxx \
	$(DOCTYPE_DIR)/bibtex.hxx \
	$(DOCTYPE_DIR)/usmarc.hxx \
	$(DOCTYPE_DIR)/dif.hxx


INC= -I$(DOCTYPE_DIR) -I../src

RM= rm -f

all: $(OBJ) $(LIB) Iindex.o Isearch.o Iutil.o Iindex Isearch Iutil

#gdt-sys.h:
#	/bin/sh ./configure $(CC)

Iindex.o:$(H) Iindex.cxx
	$(CC) $(CFLAGS) $(INC) -c Iindex.cxx

Isearch.o:$(H) Isearch.cxx
	$(CC) $(CFLAGS) $(INC) -c Isearch.cxx

Iutil.o:$(H) Iutil.cxx
	$(CC) $(CFLAGS) $(INC) -c Iutil.cxx

vlist.o:$(H) vlist.cxx
	$(CC) $(CFLAGS) $(INC) -c vlist.cxx

registry.o:$(H) registry.cxx
	$(CC) $(CFLAGS) $(INC) -c registry.cxx

opobj.o:$(H) opobj.cxx
	$(CC) $(CFLAGS) $(INC) -c opobj.cxx

opstack.o:$(H) opstack.cxx
	$(CC) $(CFLAGS) $(INC) -c opstack.cxx

operand.o:$(H) operand.cxx
	$(CC) $(CFLAGS) $(INC) -c operand.cxx

operator.o:$(H) operator.cxx
	$(CC) $(CFLAGS) $(INC) -c operator.cxx

termobj.o:$(H) termobj.cxx
	$(CC) $(CFLAGS) $(INC) -c termobj.cxx

sterm.o:$(H) sterm.cxx
	$(CC) $(CFLAGS) $(INC) -c sterm.cxx

fprec.o:$(H) fprec.cxx
	$(CC) $(CFLAGS) $(INC) -c fprec.cxx

fpt.o:$(H) fpt.cxx
	$(CC) $(CFLAGS) $(INC) -c fpt.cxx

strlist.o:$(H) strlist.cxx
	$(CC) $(CFLAGS) $(INC) -c strlist.cxx

dtreg.o:$(H) dtreg.cxx
	$(CC) $(CFLAGS) $(INC) -c dtreg.cxx

idb.o:$(H) idb.cxx
	$(CC) $(CFLAGS) $(INC) -c idb.cxx

string.o:$(H) string.cxx
	$(CC) $(CFLAGS) $(INC) -c string.cxx

strstack.o:$(H) strstack.cxx
	$(CC) $(CFLAGS) $(INC) -c strstack.cxx
	 
tokengen.o:$(H) tokengen.cxx
	$(CC) $(CFLAGS) $(INC) -c tokengen.cxx
		  
infix2rpn.o:$(H) infix2rpn.cxx
	$(CC) $(CFLAGS) $(INC) -c infix2rpn.cxx

common.o:$(H) common.cxx
	$(CC) $(CFLAGS) $(INC) -c common.cxx

result.o:$(H) result.cxx
	$(CC) $(CFLAGS) $(INC) -c result.cxx

merge.o:$(H) merge.cxx
	$(CC) $(CFLAGS) $(INC) -c merge.cxx

rset.o:$(H) rset.cxx
	$(CC) $(CFLAGS) $(INC) -c rset.cxx

iresult.o:$(H) iresult.cxx
	$(CC) $(CFLAGS) $(INC) -c iresult.cxx

irset.o:$(H) irset.cxx
	$(CC) $(CFLAGS) $(INC) -c irset.cxx

squery.o:$(H) squery.cxx
	$(CC) $(CFLAGS) $(INC) -c squery.cxx

record.o:$(H) record.cxx
	$(CC) $(CFLAGS) $(INC) -c record.cxx

reclist.o:$(H) reclist.cxx
	$(CC) $(CFLAGS) $(INC) -c reclist.cxx

mdt.o:$(H) mdt.cxx
	$(CC) $(CFLAGS) $(INC) -c mdt.cxx

mdtrec.o:$(H) mdtrec.cxx
	$(CC) $(CFLAGS) $(INC) -c mdtrec.cxx

index.o:$(H) index.cxx
	$(CC) $(CFLAGS) $(INC) -c index.cxx

attr.o:$(H) attr.cxx
	$(CC) $(CFLAGS) $(INC) -c attr.cxx

attrlist.o:$(H) attrlist.cxx
	$(CC) $(CFLAGS) $(INC) -c attrlist.cxx

dfd.o:$(H) dfd.cxx
	$(CC) $(CFLAGS) $(INC) -c dfd.cxx

dfdt.o:$(H) dfdt.cxx
	$(CC) $(CFLAGS) $(INC) -c dfdt.cxx

dft.o:$(H) dft.cxx
	$(CC) $(CFLAGS) $(INC) -c dft.cxx

df.o:$(H) df.cxx
	$(CC) $(CFLAGS) $(INC) -c df.cxx

fc.o:$(H) fc.cxx
	$(CC) $(CFLAGS) $(INC) -c fc.cxx

fct.o:$(H) fct.cxx
	$(CC) $(CFLAGS) $(INC) -c fct.cxx

soundex.o:$(H) soundex.cxx
	$(CC) $(CFLAGS) $(INC) -c soundex.cxx

glist.o:$(H) glist.cxx
	$(CC) $(CFLAGS) $(INC) -c glist.cxx

gstack.o:$(H) gstack.cxx
	$(CC) $(CFLAGS) $(INC) -c gstack.cxx

dictionary.o:$(H) dictionary.cxx
	$(CC) $(CFLAGS) $(INC) -c dictionary.cxx

memcntl.o: $(H) memcntl.c
	$(CC) $(CFLAGS) $(INC) -c memcntl.c

marclib.o: $(H) marclib.cxx
	$(CC) $(CFLAGS) $(INC) -c marclib.cxx

marc.o: $(H) marc.cxx
	$(CC) $(CFLAGS) $(INC) -c marc.cxx

simple.o:$(H) $(DOCTYPE_DIR)/simple.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/simple.cxx

firstline.o:$(H) $(DOCTYPE_DIR)/firstline.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/firstline.cxx

colondoc.o:$(H) $(DOCTYPE_DIR)/colondoc.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/colondoc.cxx

iafadoc.o:$(H) $(DOCTYPE_DIR)/iafadoc.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/iafadoc.cxx

mailfolder.o:$(H) $(DOCTYPE_DIR)/mailfolder.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/mailfolder.cxx

referbib.o:$(H) $(DOCTYPE_DIR)/referbib.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/referbib.cxx

irlist.o:$(H) $(DOCTYPE_DIR)/irlist.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/irlist.cxx

listdigest.o:$(H) $(DOCTYPE_DIR)/listdigest.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/listdigest.cxx

maildigest.o:$(H) $(DOCTYPE_DIR)/maildigest.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/maildigest.cxx

medline.o:$(H) $(DOCTYPE_DIR)/medline.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/medline.cxx

filmline.o:$(H) $(DOCTYPE_DIR)/filmline.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/filmline.cxx

memodoc.o:$(H) $(DOCTYPE_DIR)/memodoc.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/memodoc.cxx

sgmlnorm.o:$(H) $(DOCTYPE_DIR)/sgmlnorm.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/sgmlnorm.cxx

html.o:$(H) $(DOCTYPE_DIR)/html.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/html.cxx

oneline.o:$(H) $(DOCTYPE_DIR)/oneline.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/oneline.cxx

para.o:$(H) $(DOCTYPE_DIR)/para.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/para.cxx

filename.o:$(H) $(DOCTYPE_DIR)/filename.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/filename.cxx

ftp.o:$(H) $(DOCTYPE_DIR)/ftp.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/ftp.cxx

emacsinfo.o:$(H) $(DOCTYPE_DIR)/emacsinfo.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/emacsinfo.cxx

gopher.o:$(H) $(DOCTYPE_DIR)/gopher.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/gopher.cxx

bibtex.o:$(H) $(DOCTYPE_DIR)/bibtex.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/bibtex.cxx

usmarc.o:$(H) $(DOCTYPE_DIR)/usmarc.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/usmarc.cxx

dif.o:$(H) $(DOCTYPE_DIR)/dif.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/dif.cxx


doctype.o:$(H) $(DOCTYPE_DIR)/doctype.cxx
	$(CC) $(CFLAGS) $(INC) -c $(DOCTYPE_DIR)/doctype.cxx

$(LIB):$(BIN_DIR)/$(LIB)
	@true

$(BIN_DIR)/$(LIB):$(OBJ)
	$(AR) $(ARFLAGS) $(BIN_DIR)/$(LIB) $(OBJ)
#	-if $(RANLIB_TEST); then $(RANLIB) $(BIN_DIR)/$(LIB); else true; fi
	$(RANLIB) $(BIN_DIR)/$(LIB)

Iindex:$(BIN_DIR)/Iindex
	@true

$(BIN_DIR)/Iindex:$(BIN_DIR)/$(LIB) Iindex.cxx Iindex.o
	$(RM) $(BIN_DIR)/Iindex
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(BIN_DIR)/Iindex Iindex.o -L$(BIN_DIR) \
			-lIsearch -lm -lc $(DOCLIB)

Isearch:$(BIN_DIR)/Isearch
	@true

$(BIN_DIR)/Isearch:$(BIN_DIR)/$(LIB) Isearch.cxx Isearch.o
	$(RM) $(BIN_DIR)/Isearch
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(BIN_DIR)/Isearch Isearch.o -L$(BIN_DIR) \
			-lIsearch -lm -lc $(DOCLIB)

Iutil:$(BIN_DIR)/Iutil
	@true

$(BIN_DIR)/Iutil:$(BIN_DIR)/$(LIB) Iutil.cxx Iutil.o
	$(RM) $(BIN_DIR)/Iutil
	$(CC) $(CFLAGS) $(LDFLAGS) -o $(BIN_DIR)/Iutil Iutil.o -L$(BIN_DIR) \
			-lIsearch -lm -lc $(DOCLIB)

clean:
	$(RM) *.o *~ core $(BIN_DIR)/Iindex \
		$(BIN_DIR)/Isearch $(BIN_DIR)/Iutil $(BIN_DIR)/$(LIB)

realclean:
	$(RM) *.o *~ core Makefile Makefile.000 conf.h $(BIN_DIR)/Iindex \
		$(BIN_DIR)/Isearch $(BIN_DIR)/Iutil $(BIN_DIR)/$(LIB)

distclean:
	$(RM) *.o *~ core Makefile Makefile.000 conf.h $(BIN_DIR)/Iindex \
		$(BIN_DIR)/Isearch $(BIN_DIR)/Iutil $(BIN_DIR)/$(LIB)

build:
	make -i realclean
	make all

install:
	@echo "*** Copying Isearch executables to $(INSTALL)/. ***"
	cp $(BIN_DIR)/Iindex $(INSTALL)/.
	cp $(BIN_DIR)/Isearch $(INSTALL)/.
	cp $(BIN_DIR)/Iutil $(INSTALL)/.
