=====================================================================
                           CORBA-FaCT v3.1
=====================================================================



Obtaining CORBA-FaCT
--------------------

The latest version of CORBA-FaCT can be obtained from:

	www.cs.man.ac.uk/~horrocks



System Requirements
-------------------

CORBA-FaCT executables are available for Linux and Windows
systems. Therefore, you do not need Lisp to run CORBA-FaCT on one of
these systems, but you do need JAVA VERSION "1.3". If your system
doesn't use this java version by default YOU MUST SET THE PATH OF YOUR
JAVA IN ONE OF THE SCRIPT FILES (see the installation instructions
below).

The distribution includes Lisp source code, so you can also run FaCT
on any system with a suitable Lisp (the system has been developed
using Allegro Lisp, but will work with most Lisps). However, even in
this case, you still need JAVA VERSION "1.3" to run the CORBA interface.



Installing CORBA-FaCT on a Linux System
---------------------------------------

1. Download the CORBA-FaCT distribution file.

2. Untar the distribution by typing

	zcat <download_path>/CFaCT-linux.tgz | tar xf -

   This will create a directory CORBA-FaCT-linux in the working directory.
   You can move CORBA-FaCT-linux directory or rename it as long as you
   do not change its internal structure.
  
   Presumably you already got that far if you are reading this.

3. In the "scripts" directory is a file "environment" that defines
   variables used by the system (directory paths, etcetera). There is
   a clearly documented section at the beginning of this file
   containing variables that you may want/need to change. In
   particular the variables "LINUX_JAVA_PATH" and/or "SUNOS_JAVA_PATH"
   may need to be set to the paths where java 1.3 is found on your
   Linux and SunOS systems respectively. If these are correctly set,
   then typing:

	$LINUX_JAVA_PATH/bin/java -version

   on a Linux system, where $LINUX_JAVA_PATH is the value you assigned
   to that variable, should cause java to return some version
   information such as:

	java version "1.3.0"
	Java(TM) 2 Runtime Environment, Standard Edition (build 1.3.0)
	Java HotSpot(TM) Client VM (build 1.3.0, mixed mode)

   You may also want to change the value of the variable "MYPLACE" to
   the absolute path where you have installed the distribution - this
   will allow the various scripts to be run form any directory by
   adding the scripts directory to your path.



Installing CORBA-FaCT on a Windows/NT System
--------------------------------------------

1. Download the CORBA-FaCT distribution file.

2. Extract the distribution into a folder of your choice. The
   destination path does not matter as long as the structure of the
   subdirectories in the distribution archive are maintained as they are
   (e.g. do not extract all files in a single folder).

   The distribution will be extracted into a folder named
   CORBA-FaCT-win. You can move CORBA-FaCT-win directory or rename it
   as long as you do not change its internal structure.

   Presumably you already got that far if you are reading this.

3. In the "scripts" directory is a file "env.bat" that defines
   variables used by the system (directory paths, etcetera). You will 
   need to edit this if the default settings don't work on your
   system. In particular, the variable "JAVA" may need to be set if
   java 1.3 is not the default on your system. You can check this by
   typing the command:

	java -version

   in an MS-DOS shell. This should cause java to return some version
   information such as:

	java version "1.3"

   If you get some error message such as "Command not found", or if
   the java version is not 1.3, then you will need to set the variable
   JAVA to the path where java 1.3 is found on your system.

4. With Windows'95 and Windows'98 you may have to increase the amount
   of memory allocated to environment variables for each of the batch
   files - you can do this using their "Properties" menus (Memory, 
   Initial environment). At the same time you could also set the 
   "Working" directory (Program, Working) as this will allow
   you to run CORBA-FaCT without first changing to the scripts
   directory.



Running CORBA-FaCT
------------------

Reasoners
---------
The FaCT system offers a choice of reasoners, one for the logic SHF
and the other for the logic SHIQ. SHIQ extends SHF with inverse roles
and qualified number restrictions, but reasoning is less efficient.


  Running CORBA-FaCT on a Linux System
   --------------------------------------------
1. On Linux, you run the SHF reasoner using the "RunSHF" script which resides 
   in the "scripts" directory.

   To run the SHIQ reasoner, use the "RunSHIQ" script which resides in
   the "scripts" directory.

2. If you don't have a client application, a simple demonstration client
   has been provided with the distribution and can be run using the
   script "RunClient".

   It will allow you to establish a connection with the server and
   perform various reasoning tasks, including compiling and visualising
   (XML) knowledge bases.

   The Linux script files can take various command line parameters that
   allow the default behaviour to be changed. For example, the port used
   by the CORBA naming service can be explicitly set (default is
   8000).


   Running CORBA-FaCT on a Windows/NT System
   --------------------------------------------
1. If you followed the default installation procedure, an entry for CORBA-FaCT
   will have been created in the Windows Start Menu. Click on the Start Menu and
   then select CORBA-FaCT. The sub-menu of CORBA-FaCT contains a choice of two 
   reasoners; the SHF Reasoner and the Shiq Reasoner. Select one of the resoners 
   from the sub-menu.

   Alternatively, use Windows Explorer to select the "scripts" folder of the
   CORBA-FaCT distribution directory. Double click on "RunSHF.bat" to start 
   the SHF reasoner or "RunSHIQ.bat" to start the SHIQ reasoner.  

2. If you don't have a client application, a simple demonstration client
   has been provided with the distribution and can be run by selecting 
   CORBA-FaCT/Client from the Windows Start Menu.

   Alternatively, use Windows Explorer to select the "scripts" folder of the
   CORBA-FaCT distribution directory. Double click on "RunClient.bat" to start 
   the reasoner.  

   The client application will allow you to establish a connection with the server and
   perform various reasoning tasks, including compiling and visualising
   (XML) knowledge bases.


 
Information for Experienced Lisp users only
-------------------------------------------

The lisp source files for the system are in the directory
"sources". The file "FaCT-system.cl" defines the system using the
Franz Allegro Lisp defsystem functions and will need some modification
to work with other Lisps. However, the other source files should be
compatible with most Common Lisp implementations.

The system can be used in several possible configurations as defined
in the FaCT-system.cl file (some of these are designed for use with a
CORBA interface that is still under development). The three that are
of most interest are:

  ":fact" - the standard FaCT system with a kris/krss style functional
            interface,

  ":shiq" - the same interface with a more powerful reasoner
            supporting inverse roles and qualified number
            restrictions, and

   ":dlr" - a dlr interface to the shiq reasoner.

Configurations should be compiled before use. To do this (e.g., for
":fact"), run Allegro Lisp and type:

          (load "<path>FaCT-system.cl")
          (make-system :fact)
          (use-package "FACT")

where "<path>" is the (absolute or relative) path of the FaCT
sources directory on your system (if this is the local directory, then
"<path>" can be omitted). On future occasions the configuration can be
used (from any directory) simply by loading it. To do this, run
Allegro Lisp and type:

          (load "<path>FaCT-system.cl")
          (load-system :fact)
          (use-package "FACT")


Additional Documentation
------------------------

Documentation is still a problem (we are working on it). In the
"manual" directory is the original FaCT manual along with a document
"corba-fact-idl.ps" that describes the CORBA interface. None of this
is very up to date. Sorry!

In addition, the "sources/java" directory contains a jar archive of
sources for the demonstration client application and an IDL
definition for the CORBA interface.

This distribution contains the GNU classes GetOpt and LongOpt. 
The source code for these classes are contained in the 
fact-client-src.jar and are distributed in accordance with the 
GNU general public license.


The CORBA-FaCT Distribution
---------------------------

LICENCE       - copy of GNU General Public License.
README        - this file.
java          - java files for interface etcetera.
lisp          - lisp files for (various) reasoners.
manual        - manual and (some)documentation.
scripts       - startup scripts for CORBA-FaCT components.
sources       - sources (Lisp and Java)
tboxes        - example XML knowledge bases.


